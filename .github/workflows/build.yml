name: Build

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build_ubuntu_22_04:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        shared: [OFF, ON]
        compiler:
          - { compiler: GNU,   CXX: g++, install: g++ }
          - { compiler: CLANG, CXX: clang++, install: clang }
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Update package repositories
      run: sudo apt-get update -yq

    - name: Install ubuntu dependencies
      run: sudo apt-get install -yq libboost-program-options1.74.0 libboost-dev libboost-all-dev ninja-build ${{matrix.compiler.install}}

    - name: Install python dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install dots-code-generator

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      env:
        CXX: ${{ matrix.compiler.CXX }}
      # Note the current convention is to use the -S and -B options here to specify source
      # and build directories, but this is only available with CMake 3.13 and higher.
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -G Ninja -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_DOTS_SHARED=${{ matrix.shared }}

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: tests/dots-unittests --gtest_output="xml:report.xml"

    - name: Test (experimental features)
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: tests/dots-unittests-experimental --gtest_output="xml:report_experimental.xml"
